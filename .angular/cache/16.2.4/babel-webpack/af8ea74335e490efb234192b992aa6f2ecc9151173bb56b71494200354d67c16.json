{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction NewRatingComponent_div_7_tr_4_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\")(1, \"label\")(2, \"input\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function NewRatingComponent_div_7_tr_4_td_1_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r2 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(question_r2.risposta = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    const question_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"name\", \"question-\", question_r2.id, \"\");\n    i0.ɵɵproperty(\"value\", option_r4)(\"ngModel\", question_r2.risposta)(\"checked\", question_r2.risposta === option_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction NewRatingComponent_div_7_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, NewRatingComponent_div_7_tr_4_td_1_Template, 4, 5, \"td\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.currentRatingType === \"trasporto\" ? ctx_r1.trasportoOptions : ctx_r1.currentRatingType === \"carne\" ? ctx_r1.carneOptions : ctx_r1.latteOptions);\n  }\n}\nfunction NewRatingComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 3);\n    i0.ɵɵelement(2, \"thead\");\n    i0.ɵɵelementStart(3, \"tbody\");\n    i0.ɵɵtemplate(4, NewRatingComponent_div_7_tr_4_Template, 2, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NewRatingComponent_div_7_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.submitRatings());\n    });\n    i0.ɵɵtext(6, \"Invia\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.questions);\n  }\n}\nexport var RatingType;\n(function (RatingType) {\n  RatingType[\"CARNE\"] = \"carne\";\n  RatingType[\"LATTE\"] = \"latte\";\n  RatingType[\"TRASPORTO\"] = \"trasporto\";\n})(RatingType || (RatingType = {}));\nexport class NewRatingComponent {\n  constructor() {\n    this.questions = [];\n    this.RatingType = RatingType;\n    this.carneOptions = ['Sì', 'No', 'N.A.', 'N.V.', 'N.N.', 'N.P.'];\n    this.latteOptions = ['Sì', 'No', 'N.A.', 'N.V.', 'N.N.', 'N.P.'];\n    this.trasportoOptions = [1, 2, 3, 4, 5, 6];\n  }\n  ngOnInit() {}\n  setRatingType(type) {\n    this.currentRatingType = type;\n    // In questa sezione puoi inizializzare le domande in base al tipo di rating\n  }\n\n  get currentOptions() {\n    switch (this.currentRatingType) {\n      case RatingType.CARNE:\n        return this.carneOptions;\n      case RatingType.LATTE:\n        return this.latteOptions;\n      case RatingType.TRASPORTO:\n        return this.trasportoOptions;\n      default:\n        return [];\n    }\n  }\n  submitRatings() {\n    // Qui gestisci l'invio delle risposte al tuo backend o servizio\n  }\n  static #_ = this.ɵfac = function NewRatingComponent_Factory(t) {\n    return new (t || NewRatingComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewRatingComponent,\n    selectors: [[\"app-new-rating\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"rating-type-buttons\"], [3, \"click\"], [4, \"ngIf\"], [1, \"rating-table\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"ngModel\", \"checked\", \"ngModelChange\"]],\n    template: function NewRatingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function NewRatingComponent_Template_button_click_1_listener() {\n          return ctx.setRatingType(ctx.RatingType.CARNE);\n        });\n        i0.ɵɵtext(2, \"Prodotti a base di carne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function NewRatingComponent_Template_button_click_3_listener() {\n          return ctx.setRatingType(ctx.RatingType.LATTE);\n        });\n        i0.ɵɵtext(4, \"Prodotti a base di latte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function NewRatingComponent_Template_button_click_5_listener() {\n          return ctx.setRatingType(ctx.RatingType.TRASPORTO);\n        });\n        i0.ɵɵtext(6, \"Trasporto\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, NewRatingComponent_div_7_Template, 7, 1, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentRatingType);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i2.NgIf],\n    styles: [\".rating-table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-top: 20px;\\n  }\\n  \\n  .rating-table[_ngcontent-%COMP%], .rating-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .rating-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    border: 1px solid #ddd;\\n  }\\n  \\n  .rating-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .rating-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    text-align: left;\\n    padding: 8px;\\n  }\\n  \\n  .rating-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #f2f2f2;\\n  }\\n  \\n  \\n\\n  .rating-table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n    background-color: #f5f5f5;\\n  }\\n  \\n  .rating-table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n    margin-right: 5px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3LXJhdGluZy9uZXctcmF0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUEsK0RBQStEO0VBQy9EO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLnJhdGluZy10YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAucmF0aW5nLXRhYmxlLCAucmF0aW5nLXRhYmxlIHRoLCAucmF0aW5nLXRhYmxlIHRkIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5yYXRpbmctdGFibGUgdGgsIC5yYXRpbmctdGFibGUgdGQge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICB9XHJcbiAgXHJcbiAgLnJhdGluZy10YWJsZSB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG4gIH1cclxuICBcclxuICAvKiBPcHppb25hbGU6IGFnZ2l1bmdpIHN0aWxpIHBlciByZW5kZXJlIGxhIHRhYmVsbGEgcGnDg8K5IGJlbGxhICovXHJcbiAgLnJhdGluZy10YWJsZSB0cjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xyXG4gIH1cclxuICBcclxuICAucmF0aW5nLXRhYmxlIHRib2R5IHRkIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICB9XHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","NewRatingComponent_div_7_tr_4_td_1_Template_input_ngModelChange_2_listener","$event","ɵɵrestoreView","_r7","question_r2","ɵɵnextContext","$implicit","ɵɵresetView","risposta","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵpropertyInterpolate1","id","ɵɵproperty","option_r4","ɵɵtextInterpolate1","ɵɵtemplate","NewRatingComponent_div_7_tr_4_td_1_Template","ctx_r1","currentRatingType","trasportoOptions","carneOptions","latteOptions","ɵɵelement","NewRatingComponent_div_7_tr_4_Template","NewRatingComponent_div_7_Template_button_click_5_listener","_r10","ctx_r9","submitRatings","ctx_r0","questions","RatingType","NewRatingComponent","constructor","ngOnInit","setRatingType","type","currentOptions","CARNE","LATTE","TRASPORTO","_","_2","selectors","decls","vars","consts","template","NewRatingComponent_Template","rf","ctx","NewRatingComponent_Template_button_click_1_listener","NewRatingComponent_Template_button_click_3_listener","NewRatingComponent_Template_button_click_5_listener","NewRatingComponent_div_7_Template"],"sources":["C:\\Users\\User\\Desktop\\Repository GitHub\\rating_system\\rating_system\\src\\app\\new-rating\\new-rating.component.ts","C:\\Users\\User\\Desktop\\Repository GitHub\\rating_system\\rating_system\\src\\app\\new-rating\\new-rating.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nexport enum RatingType {\n  CARNE = 'carne',\n  LATTE = 'latte',\n  TRASPORTO = 'trasporto'\n}\n\ntype RatingOption = string | number;\n\n@Component({\n  selector: 'app-new-rating',\n  templateUrl: './new-rating.component.html',\n  styleUrls: ['./new-rating.component.css']\n})\nexport class NewRatingComponent implements OnInit {\n  questions: RatingQuestion[] = [];\n  currentRatingType?: RatingType;\n  RatingType = RatingType;\n\n  carneOptions: RatingOption[] = ['Sì', 'No', 'N.A.', 'N.V.', 'N.N.', 'N.P.'];\n  latteOptions: RatingOption[] = ['Sì', 'No', 'N.A.', 'N.V.', 'N.N.', 'N.P.'];\n  trasportoOptions: RatingOption[] = [1, 2, 3, 4, 5, 6];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setRatingType(type: RatingType) {\n    this.currentRatingType = type;\n    // In questa sezione puoi inizializzare le domande in base al tipo di rating\n  }\n\n  get currentOptions(): RatingOption[] {\n    switch (this.currentRatingType) {\n      case RatingType.CARNE:\n        return this.carneOptions;\n      case RatingType.LATTE:\n        return this.latteOptions;\n      case RatingType.TRASPORTO:\n        return this.trasportoOptions;\n      default:\n        return [];\n    }\n  }\n\n  submitRatings() {\n    // Qui gestisci l'invio delle risposte al tuo backend o servizio\n  }\n}\n\nexport interface RatingQuestion {\n  id: number;\n  riferimento: string;\n  requisiti: string;\n  risposta?: RatingOption;  // per gestire sia stringhe che numeri come risposte\n}\n","<!-- Bottoni per selezionare il tipo di rating -->\n<div class=\"rating-type-buttons\">\n    <button (click)=\"setRatingType(RatingType.CARNE)\">Prodotti a base di carne</button>\n    <button (click)=\"setRatingType(RatingType.LATTE)\">Prodotti a base di latte</button>\n    <button (click)=\"setRatingType(RatingType.TRASPORTO)\">Trasporto</button>\n  </div>\n  \n  <!-- Mostra la tabella solo se è stato selezionato un tipo di rating -->\n  <div *ngIf=\"currentRatingType\">\n    <table class=\"rating-table\">\n      <thead>\n        <!-- ... intestazione come prima ... -->\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let question of questions\">\n          <!-- ... altre celle ... -->\n          <td *ngFor=\"let option of currentRatingType === 'trasporto' ? trasportoOptions : (currentRatingType === 'carne' ? carneOptions : latteOptions)\">\n            <label>\n              <input type=\"radio\" name=\"question-{{ question.id }}\"\n                     [value]=\"option\"\n                     [(ngModel)]=\"question.risposta\"\n                     [checked]=\"question.risposta === option\">\n              {{ option }}\n            </label>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  \n    <button (click)=\"submitRatings()\">Invia</button>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}